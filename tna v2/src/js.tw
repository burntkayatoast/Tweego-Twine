:: StoryScript [script]
// imports icons
importStyles('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css');


// reset passage to top
$(document).on(":passagedisplay", function() {
	$("#passages").scrollTop(0);
});

// Handy Dandy stuff
$(document).ready(function() {
	$("#saves").click(function() {
		UI.saves();
	});	
	$("#settings").click(function() {
		UI.settings();
	});
	$("#restart").click(function() {
		UI.restart();
	});	
    $("#back").click(function() {
        Engine.backward();
    });
    $("#mobile-back").click(function() {
        Engine.backward();
    });
});

// to avoid including passages tagged 'noreturn' when returning to game
$(document).on(':passagestart', function (ev) {
    if (!ev.passage.tags.includes('noreturn')) {
        State.variables.return = ev.passage.title;
    }
});

// autosave
config.saves.autosave = true;

config.saves.isAllowed = function() {
    if (tags().includes('noreturn')) {
        return false;
    }
    if (tags().includes('nosave')) {
        return false;
    }
    return true;
};
// giving the autosave a name 
Config.saves.onSave = function (save) {
	save.title = State.getVar("$gamechapter");
};


// force fullscreen portrait mode on mobile
function lock (orientation) {
  // Go into full screen first
  if (document.documentElement.requestFullscreen) {
    document.documentElement.requestFullscreen();
  } else if (document.documentElement.mozRequestFullScreen) {
    document.documentElement.mozRequestFullScreen();
  } else if (document.documentElement.webkitRequestFullscreen) {
    document.documentElement.webkitRequestFullscreen();
  } else if (document.documentElement.msRequestFullscreen) {
    document.documentElement.msRequestFullscreen();
  }

  // Then lock orientation
  screen.orientation.lock(orientation);
} 


/*--------- SETTINGS -------- */
// change font size 
var settingFontSize = ["15px", "16px", "17px", "18px", "19px", "20px", "21px", "22px"];
var resizeFont = function() {
	var size = document.getElementById('passages');

	switch (settings.fontSize) {
		case "15px":
			size.style.fontSize = "15px";
			break;
	}
    switch (settings.fontSize) { 
		case "16px":
			size.style.fontSize = "16px";
			break;
	}
	switch (settings.fontSize) {
		case "17px":
			size.style.fontSize = "17px";
			break;
	}
    switch (settings.fontSize) { 
		case "18px":
			size.style.fontSize = "18px";
			break;
	}
    switch (settings.fontSize) {
		case "19px":
			size.style.fontSize = "19px";
			break;
	}
    switch (settings.fontSize) {
		case "20px":
			size.style.fontSize = "20px";
			break;
	}
    switch (settings.fontSize) {
		case "21px":
			size.style.fontSize = "21px";
			break;
	}
    switch (settings.fontSize) {
		case "22px":
			size.style.fontSize = "22px";
			break;
	}
};
Setting.addList("fontSize", {
	label		: "Change Font Size",
	list		: settingFontSize,
    default     : "15px",
	onInit		: resizeFont,
	onChange	: resizeFont
});


// change font family
var settingFontFamily = ["serif","sans-serif","openDyslexic"];
var fontFamily = function() {
	var $html = $("html");
		$html.removeClass("serif sansserif opendyslexic");
	switch (settings.fontFamily) {
		case "sans-serif":
			$html.addClass("sansserif");
			break;
		case "serif":
			$html.addClass("serif");
			break;
			case "openDyslexic":
			$html.addClass("opendyslexic");
			break;
	}
};
Setting.addList("fontFamily", {
	label		: "Change font style",
	list		: settingFontFamily,
	default: "sans-serif",
	onInit		: fontFamily,
	onChange	: fontFamily
});


// change theme
var settingThemeNames = ["Dark", "Light"];
var settingThemeHandler = function () {
	var $html = $("html");
	$html.removeClass("light");
	switch (settings.theme) {
	case "Light":
		$html.addClass("light");
		break;
	}
};
Setting.addList("theme", {
	label    : "Switch display mode",
	list     : settingThemeNames,
	default	 : "Dark",
	onInit   : settingThemeHandler,
	onChange : settingThemeHandler
});


// toggle content warning 
Setting.addToggle("content-warning", {
    label: "content warning",
    default: true
});





// dialog-api-macro-set.min.js, for SugarCube 2, by Chapel
// v1.3.0, 2024-07-22, 336675ff2cabe5f729a5f30d86aa409cc8432726
;Macro.add("dialog",{tags:["onopen","onclose"],handler:function(){var t="",s=null,o=null,n=this.args.length>0?this.args[0]:"",i=this.args.length>1?this.args.slice(1).flat(1/0):[];this.payload.forEach((function(n,i){0===i?t=n.contents:"onopen"===n.name?s=s?s+n.contents:n.contents:o=o?o+n.contents:n.contents})),i.push("macro-"+this.name),Dialog.setup(n,i.join(" ")),Dialog.wiki(t),s&&"string"==typeof s&&s.trim()&&$(document).one(":dialogopened",(function(){$.wiki(s)})),o&&"string"==typeof o&&o.trim()&&$(document).one(":dialogclosed",(function(){$.wiki(o)})),Dialog.open()}}),Macro.add("popup",{handler:function(){if(this.args.length<1)return this.error("need at least one argument; the passage to display");if(!Story.has(this.args[0]))return this.error("the passage "+this.args[0]+"does not exist");var t=this.args[0],s=this.args.length>1?this.args[1]:"",o=this.args.length>2?this.args.slice(2).flat(1/0):[];o.push("macro-"+this.name),Dialog.setup(s,o.join(" ")),Dialog.wiki(Story.get(t).processText()),Dialog.open()}}),Macro.add("dialogclose",{skipArgs:!0,handler:function(){Dialog.close()}});
// end dialog-api-macro-set.min.js